FROM node:23.1.0-alpine3.20 as vite-build
WORKDIR /var/www/html
COPY . .
RUN npm install && npm run build && rm -rf node_modules


FROM dwchiang/nginx-php-fpm:8.3.12-fpm-alpine3.20-nginx-1.27.1 as final

# Install Laravel framework system requirements (https://laravel.com/docs/8.x/deployment#optimizing-configuration-loading)
RUN apk add oniguruma-dev libxml2-dev

# Precompile PHP code with opcache.
RUN docker-php-ext-install -j "$(nproc)" opcache
RUN set -ex; \
  { \
    echo "; File upload at Cloud Run network limit"; \
    echo "upload_max_filesize = 32M"; \
    echo "post_max_size = 32M"; \
    echo "; Configure Opcache for Containers"; \
    echo "opcache.enable = On"; \
    echo "opcache.validate_timestamps = Off"; \
    echo "; Configure Opcache Memory (Application-specific)"; \
    echo "opcache.memory_consumption = 32"; \
  } > "$PHP_INI_DIR/conf.d/cloud-run.ini"
RUN docker-php-ext-install \
        bcmath \
        ctype \
        fileinfo \
        mbstring \
        pdo_mysql \
        xml
# Use the default production configuration
COPY ".docker/php.ini" "$PHP_INI_DIR/php.ini"

#RUN mkdir -p /var/log/nginx/logs && chmod -R a+w /var/log/nginx

# Copy Composer binary from the Composer official Docker image
COPY --from=composer:latest /usr/bin/composer /usr/bin/composer

ENV WEB_DOCUMENT_ROOT /var/www/html/public
ENV APP_ENV production
WORKDIR /var/www/html
COPY --from=vite-build /var/www/html ./

RUN composer install --no-interaction --optimize-autoloader --no-dev \
  && php artisan config:cache \
  && php artisan route:cache \
  && php artisan view:cache \
  && php artisan optimize

RUN chown -R www-data:www-data ./storage
